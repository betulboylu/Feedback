// <auto-generated />
using System;
using FeedbackMicroservice.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FeedbackMicroservice.Migrations
{
    [DbContext(typeof(FeedbackContext))]
    partial class FeedbackContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FeedbackMicroservice.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("FeedbackMicroservice.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 3, 13, 16, 9, 43, 236, DateTimeKind.Local).AddTicks(363),
                            IsDeleted = false,
                            Name = "For Honor"
                        });
                });

            modelBuilder.Entity("FeedbackMicroservice.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 3, 13, 16, 9, 43, 238, DateTimeKind.Local).AddTicks(8422),
                            GameId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 3, 13, 16, 9, 43, 238, DateTimeKind.Local).AddTicks(9020),
                            GameId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 3, 13, 16, 9, 43, 238, DateTimeKind.Local).AddTicks(9027),
                            GameId = 1,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("FeedbackMicroservice.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 3, 13, 16, 9, 43, 238, DateTimeKind.Local).AddTicks(9872),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 3, 13, 16, 9, 43, 239, DateTimeKind.Local).AddTicks(471),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 3, 13, 16, 9, 43, 239, DateTimeKind.Local).AddTicks(477),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
